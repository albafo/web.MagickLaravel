<?php
/**
 * Created by PhpStorm.
 * User: alvarobanofos
 * Date: 11/07/15
 * Time: 19:53
 */

namespace Magia\Model\Form;


use Doctrine\DBAL\Schema\Column;
use Illuminate\Database\Eloquent\Relations\Relation;
use Magia\Model\Relations\MagiaRelation;
use Magia\View\ViewComposers\ViewIncludes;

class Select2Field extends SelectField
{


    protected $limitSelection = 0;


    /**
     * @param string $relation
     * @param \Illuminate\Database\Eloquent\Relations\Relation $relationObject
     * @param \Magia\Model\MagickEloquent $relationModel
     */
    public function generateFieldFromRelation($relation, $relationObject, $relationModel)
    {
        $options = array();
        $name = $relation;
        $multiple=true;
        $value = array();

        $className = class_basename($relationObject);
        $pk = $relationObject->getRelated()->getKeyName();


        if($className == MagiaRelation::BELONGS_TO) {
            /* @var \Illuminate\Database\Eloquent\Relations\Belongsto $relation */

            $options = $this->generateOptions($relationObject->getRelated(), $pk);
            $value[] = $relationModel->$pk;
            $this->limitSelection = 1;

        }

        if($className == MagiaRelation::BELONGS_TO_MANY) {

            $options = $this->generateOptions($relationObject->getRelated(), $pk);
            foreach($relationModel as $item) {
                $value[] = $item->$pk;
            }
        }


        ViewIncludes::getInstance()->addJsAfter("plugins/select2/js/select2.min.js");
        $result = parent::generateFilledField($options, $name, $multiple, $value);
        $maxLimit = "";
        if($this->limitSelection > 0) {
            $maxLimit = "maximumSelectionLength: ".$this->limitSelection;
        }
        ViewIncludes::getInstance()->addScript("
            <script>

                    $('.select2-{$this->labelName}').select2({
                        $maxLimit
                    })

            </script>
         ");
        ViewIncludes::getInstance()->addCss("plugins/select2/css/select2.min.css");
        return $result;
    }


    public function generateCode($extraAttr = array())
    {
        $extraAttr_tmp = array();
        $extraAttr_tmp["class"] = " select2-".$this->labelName;
        $extraAttr_tmp["style"] = " display: none; width: 100%";
        $extraAttr = array_merge($extraAttr, $extraAttr_tmp);
        return parent::generateCode($extraAttr); // TODO: Change the autogenerated stub
    }

    /**
     * @param $relationModel
     * @param $pk
     * @return mixed
     */
    public function generateOptions($relationModel, $pk)
    {
        $options = array();
        foreach ($relationModel->all() as $item) {
            $options[$item->$pk] = $item->getText();
        }
        return $options;
    }
}